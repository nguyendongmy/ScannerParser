'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace GTPService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_ShadowPassword", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _ShadowPassword
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private date_createdField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private id_shadowField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private passwordField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private typeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private usernameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property date_created() As Date
            Get
                Return Me.date_createdField
            End Get
            Set
                If (Me.date_createdField.Equals(value) <> true) Then
                    Me.date_createdField = value
                    Me.RaisePropertyChanged("date_created")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property id_shadow() As Integer
            Get
                Return Me.id_shadowField
            End Get
            Set
                If (Me.id_shadowField.Equals(value) <> true) Then
                    Me.id_shadowField = value
                    Me.RaisePropertyChanged("id_shadow")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                If (Me.isActiveField.Equals(value) <> true) Then
                    Me.isActiveField = value
                    Me.RaisePropertyChanged("isActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                If (Object.ReferenceEquals(Me.passwordField, value) <> true) Then
                    Me.passwordField = value
                    Me.RaisePropertyChanged("password")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property type() As Integer
            Get
                Return Me.typeField
            End Get
            Set
                If (Me.typeField.Equals(value) <> true) Then
                    Me.typeField = value
                    Me.RaisePropertyChanged("type")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.usernameField, value) <> true) Then
                    Me.usernameField = value
                    Me.RaisePropertyChanged("username")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_DBStatus", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _DBStatus
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreatedByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateCreatedField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaintenanceEndField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaintenanceStartField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private id_DBStatusField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private status_flagField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private status_notifyField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreatedBy() As String
            Get
                Return Me.CreatedByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CreatedByField, value) <> true) Then
                    Me.CreatedByField = value
                    Me.RaisePropertyChanged("CreatedBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateCreated() As System.Nullable(Of Date)
            Get
                Return Me.DateCreatedField
            End Get
            Set
                If (Me.DateCreatedField.Equals(value) <> true) Then
                    Me.DateCreatedField = value
                    Me.RaisePropertyChanged("DateCreated")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaintenanceEnd() As System.Nullable(Of Date)
            Get
                Return Me.MaintenanceEndField
            End Get
            Set
                If (Me.MaintenanceEndField.Equals(value) <> true) Then
                    Me.MaintenanceEndField = value
                    Me.RaisePropertyChanged("MaintenanceEnd")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaintenanceStart() As System.Nullable(Of Date)
            Get
                Return Me.MaintenanceStartField
            End Get
            Set
                If (Me.MaintenanceStartField.Equals(value) <> true) Then
                    Me.MaintenanceStartField = value
                    Me.RaisePropertyChanged("MaintenanceStart")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property id_DBStatus() As Integer
            Get
                Return Me.id_DBStatusField
            End Get
            Set
                If (Me.id_DBStatusField.Equals(value) <> true) Then
                    Me.id_DBStatusField = value
                    Me.RaisePropertyChanged("id_DBStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property status_flag() As Integer
            Get
                Return Me.status_flagField
            End Get
            Set
                If (Me.status_flagField.Equals(value) <> true) Then
                    Me.status_flagField = value
                    Me.RaisePropertyChanged("status_flag")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property status_notify() As String
            Get
                Return Me.status_notifyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.status_notifyField, value) <> true) Then
                    Me.status_notifyField = value
                    Me.RaisePropertyChanged("status_notify")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_Campaign", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _Campaign
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private campaign_nameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isActiveField As Boolean
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property campaign_name() As String
            Get
                Return Me.campaign_nameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.campaign_nameField, value) <> true) Then
                    Me.campaign_nameField = value
                    Me.RaisePropertyChanged("campaign_name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                If (Me.isActiveField.Equals(value) <> true) Then
                    Me.isActiveField = value
                    Me.RaisePropertyChanged("isActive")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_MarketName", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _MarketName
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private id_marketField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private market_statusField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private name_marketField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property id_market() As Integer
            Get
                Return Me.id_marketField
            End Get
            Set
                If (Me.id_marketField.Equals(value) <> true) Then
                    Me.id_marketField = value
                    Me.RaisePropertyChanged("id_market")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property market_status() As Integer
            Get
                Return Me.market_statusField
            End Get
            Set
                If (Me.market_statusField.Equals(value) <> true) Then
                    Me.market_statusField = value
                    Me.RaisePropertyChanged("market_status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property name_market() As String
            Get
                Return Me.name_marketField
            End Get
            Set
                If (Object.ReferenceEquals(Me.name_marketField, value) <> true) Then
                    Me.name_marketField = value
                    Me.RaisePropertyChanged("name_market")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_GTPVersion", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _GTPVersion
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private id_versionField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isCurrentField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private new_featuresField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private release_dateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private team_installedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private total_installedField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private versionField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property id_version() As Integer
            Get
                Return Me.id_versionField
            End Get
            Set
                If (Me.id_versionField.Equals(value) <> true) Then
                    Me.id_versionField = value
                    Me.RaisePropertyChanged("id_version")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isCurrent() As Boolean
            Get
                Return Me.isCurrentField
            End Get
            Set
                If (Me.isCurrentField.Equals(value) <> true) Then
                    Me.isCurrentField = value
                    Me.RaisePropertyChanged("isCurrent")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property new_features() As String
            Get
                Return Me.new_featuresField
            End Get
            Set
                If (Object.ReferenceEquals(Me.new_featuresField, value) <> true) Then
                    Me.new_featuresField = value
                    Me.RaisePropertyChanged("new_features")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property release_date() As Date
            Get
                Return Me.release_dateField
            End Get
            Set
                If (Me.release_dateField.Equals(value) <> true) Then
                    Me.release_dateField = value
                    Me.RaisePropertyChanged("release_date")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property team_installed() As String
            Get
                Return Me.team_installedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.team_installedField, value) <> true) Then
                    Me.team_installedField = value
                    Me.RaisePropertyChanged("team_installed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property total_installed() As Integer
            Get
                Return Me.total_installedField
            End Get
            Set
                If (Me.total_installedField.Equals(value) <> true) Then
                    Me.total_installedField = value
                    Me.RaisePropertyChanged("total_installed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property version() As String
            Get
                Return Me.versionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.versionField, value) <> true) Then
                    Me.versionField = value
                    Me.RaisePropertyChanged("version")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_AspNetUser", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _AspNetUser
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastActivityDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isFTPAccessField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private usernameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastActivityDate() As Date
            Get
                Return Me.LastActivityDateField
            End Get
            Set
                If (Me.LastActivityDateField.Equals(value) <> true) Then
                    Me.LastActivityDateField = value
                    Me.RaisePropertyChanged("LastActivityDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isFTPAccess() As Boolean
            Get
                Return Me.isFTPAccessField
            End Get
            Set
                If (Me.isFTPAccessField.Equals(value) <> true) Then
                    Me.isFTPAccessField = value
                    Me.RaisePropertyChanged("isFTPAccess")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.usernameField, value) <> true) Then
                    Me.usernameField = value
                    Me.RaisePropertyChanged("username")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_FTPTransaction", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _FTPTransaction
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CampaignField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private date_endField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private date_startedField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private id_server_transactionField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isCompletedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private market_nameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private number_of_runField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private number_off_app_failField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private total_file_uploadedField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private totalbytesuploadedField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private totalinputbytesField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private transaction_statusField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Campaign() As String
            Get
                Return Me.CampaignField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CampaignField, value) <> true) Then
                    Me.CampaignField = value
                    Me.RaisePropertyChanged("Campaign")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Project() As String
            Get
                Return Me.ProjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProjectField, value) <> true) Then
                    Me.ProjectField = value
                    Me.RaisePropertyChanged("Project")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property date_end() As System.Nullable(Of Date)
            Get
                Return Me.date_endField
            End Get
            Set
                If (Me.date_endField.Equals(value) <> true) Then
                    Me.date_endField = value
                    Me.RaisePropertyChanged("date_end")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property date_started() As System.Nullable(Of Date)
            Get
                Return Me.date_startedField
            End Get
            Set
                If (Me.date_startedField.Equals(value) <> true) Then
                    Me.date_startedField = value
                    Me.RaisePropertyChanged("date_started")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property id_server_transaction() As Integer
            Get
                Return Me.id_server_transactionField
            End Get
            Set
                If (Me.id_server_transactionField.Equals(value) <> true) Then
                    Me.id_server_transactionField = value
                    Me.RaisePropertyChanged("id_server_transaction")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isCompleted() As Boolean
            Get
                Return Me.isCompletedField
            End Get
            Set
                If (Me.isCompletedField.Equals(value) <> true) Then
                    Me.isCompletedField = value
                    Me.RaisePropertyChanged("isCompleted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property market_name() As String
            Get
                Return Me.market_nameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.market_nameField, value) <> true) Then
                    Me.market_nameField = value
                    Me.RaisePropertyChanged("market_name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property number_of_run() As Integer
            Get
                Return Me.number_of_runField
            End Get
            Set
                If (Me.number_of_runField.Equals(value) <> true) Then
                    Me.number_of_runField = value
                    Me.RaisePropertyChanged("number_of_run")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property number_off_app_fail() As Integer
            Get
                Return Me.number_off_app_failField
            End Get
            Set
                If (Me.number_off_app_failField.Equals(value) <> true) Then
                    Me.number_off_app_failField = value
                    Me.RaisePropertyChanged("number_off_app_fail")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property total_file_uploaded() As Integer
            Get
                Return Me.total_file_uploadedField
            End Get
            Set
                If (Me.total_file_uploadedField.Equals(value) <> true) Then
                    Me.total_file_uploadedField = value
                    Me.RaisePropertyChanged("total_file_uploaded")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property totalbytesuploaded() As Integer
            Get
                Return Me.totalbytesuploadedField
            End Get
            Set
                If (Me.totalbytesuploadedField.Equals(value) <> true) Then
                    Me.totalbytesuploadedField = value
                    Me.RaisePropertyChanged("totalbytesuploaded")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property totalinputbytes() As Integer
            Get
                Return Me.totalinputbytesField
            End Get
            Set
                If (Me.totalinputbytesField.Equals(value) <> true) Then
                    Me.totalinputbytesField = value
                    Me.RaisePropertyChanged("totalinputbytes")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property transaction_status() As Integer
            Get
                Return Me.transaction_statusField
            End Get
            Set
                If (Me.transaction_statusField.Equals(value) <> true) Then
                    Me.transaction_statusField = value
                    Me.RaisePropertyChanged("transaction_status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_Project", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _Project
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private project_nameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private project_valueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property project_name() As String
            Get
                Return Me.project_nameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.project_nameField, value) <> true) Then
                    Me.project_nameField = value
                    Me.RaisePropertyChanged("project_name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property project_value() As String
            Get
                Return Me.project_valueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.project_valueField, value) <> true) Then
                    Me.project_valueField = value
                    Me.RaisePropertyChanged("project_value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="_Client", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class _Client
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ClientNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private client_market_valueField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ClientName() As String
            Get
                Return Me.ClientNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ClientNameField, value) <> true) Then
                    Me.ClientNameField = value
                    Me.RaisePropertyChanged("ClientName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property client_market_value() As Integer
            Get
                Return Me.client_market_valueField
            End Get
            Set
                If (Me.client_market_valueField.Equals(value) <> true) Then
                    Me.client_market_valueField = value
                    Me.RaisePropertyChanged("client_market_value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="GTPService.IGTPService")>  _
    Public Interface IGTPService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/ShadowPassword", ReplyAction:="http://tempuri.org/IGTPService/ShadowPasswordResponse")>  _
        Function ShadowPassword(ByVal action As Integer, <System.ServiceModel.MessageParameterAttribute(Name:="shadowPassword")> ByVal shadowPassword1 As GTPService._ShadowPassword) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/getShadowPassword", ReplyAction:="http://tempuri.org/IGTPService/getShadowPasswordResponse")>  _
        Function getShadowPassword(ByVal status As System.Nullable(Of Integer)) As GTPService._ShadowPassword()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/ValidateUser", ReplyAction:="http://tempuri.org/IGTPService/ValidateUserResponse")>  _
        Function ValidateUser(ByVal username As String, ByVal password As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/tblFTPFile", ReplyAction:="http://tempuri.org/IGTPService/tblFTPFileResponse")>  _
        Function tblFTPFile(ByVal id_server_transaction As Integer, ByVal id_client_transaction As Integer, ByVal file_name As String, ByVal date_created As Date, ByVal is_finished As Boolean, ByVal file_status As Integer, ByVal file_name_only As String, ByVal bytestrnsfrd As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/UpdatetbFTPFile", ReplyAction:="http://tempuri.org/IGTPService/UpdatetbFTPFileResponse")>  _
        Function UpdatetbFTPFile(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal status As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/UpdateFileScannerStatus", ReplyAction:="http://tempuri.org/IGTPService/UpdateFileScannerStatusResponse")>  _
        Function UpdateFileScannerStatus(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal isScanner As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/UpdatetbFTPFileUploadTime", ReplyAction:="http://tempuri.org/IGTPService/UpdatetbFTPFileUploadTimeResponse")>  _
        Function UpdatetbFTPFileUploadTime(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal uploadtime As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/tblFTPTrasaction", ReplyAction:="http://tempuri.org/IGTPService/tblFTPTrasactionResponse")>  _
        Function tblFTPTrasaction( _
                    ByVal Action As Integer,  _
                    ByVal id_server_transaction As Integer,  _
                    ByVal id_client_transaction As Integer,  _
                    ByVal transaction_type As Boolean,  _
                    ByVal date_started As Date,  _
                    ByVal username As String,  _
                    ByVal isCompleted As Boolean,  _
                    ByVal number_of_run As Short,  _
                    ByVal number_of_app_fail As Short,  _
                    ByVal id_market As Integer,  _
                    ByVal ftp_url As String,  _
                    ByVal ip_address As String,  _
                    ByVal host_name As String,  _
                    ByVal market_name As String,  _
                    ByVal transaction_status As Short,  _
                    ByVal DBName As String,  _
                    ByVal total_file_uploaded As Integer,  _
                    ByVal campaign As String,  _
                    ByVal Project As String,  _
                    ByVal totalinputbytes As Double) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/tblDBStatus", ReplyAction:="http://tempuri.org/IGTPService/tblDBStatusResponse")>  _
        Function tblDBStatus(ByVal Action As Integer, ByVal status_notify As String, ByVal status_flag As Integer, ByVal MaintenanceStart As Date, ByVal MaintenanceEnd As Date, ByVal CreatedBy As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetDBStatus", ReplyAction:="http://tempuri.org/IGTPService/GetDBStatusResponse")>  _
        Function GetDBStatus(ByVal status_flag As Integer) As GTPService._DBStatus()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/CheckIsUserinRole", ReplyAction:="http://tempuri.org/IGTPService/CheckIsUserinRoleResponse")>  _
        Function CheckIsUserinRole(ByVal username As String, ByVal roleName As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetCampaign", ReplyAction:="http://tempuri.org/IGTPService/GetCampaignResponse")>  _
        Function GetCampaign() As GTPService._Campaign()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/deletetblFTPFile", ReplyAction:="http://tempuri.org/IGTPService/deletetblFTPFileResponse")>  _
        Function deletetblFTPFile(ByVal id_server_transaction As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/deleteFile", ReplyAction:="http://tempuri.org/IGTPService/deleteFileResponse")>  _
        Function deleteFile(ByVal id_server_transaction As Integer, ByVal file_name As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetMarket", ReplyAction:="http://tempuri.org/IGTPService/GetMarketResponse")>  _
        Function GetMarket(ByVal status As Integer) As GTPService._MarketName()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/updateTotalFailed", ReplyAction:="http://tempuri.org/IGTPService/updateTotalFailedResponse")>  _
        Function updateTotalFailed(ByVal id_server_transaction As Integer, ByVal fail_count As Integer, ByVal network_lost_count As Integer) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/countFile", ReplyAction:="http://tempuri.org/IGTPService/countFileResponse")>  _
        Function countFile(ByVal id_server_transaction As Integer, ByVal type As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/updateTotalUploaded", ReplyAction:="http://tempuri.org/IGTPService/updateTotalUploadedResponse")>  _
        Function updateTotalUploaded(ByVal id_server_transaction As Integer, ByVal total_file_uploaded As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/deleteTransaction", ReplyAction:="http://tempuri.org/IGTPService/deleteTransactionResponse")>  _
        Function deleteTransaction(ByVal id_server_transaction As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/AddMarket", ReplyAction:="http://tempuri.org/IGTPService/AddMarketResponse")>  _
        Function AddMarket(ByVal name_market As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/completeTransaction", ReplyAction:="http://tempuri.org/IGTPService/completeTransactionResponse")>  _
        Function completeTransaction(ByVal id_server_transaction As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/getVersion", ReplyAction:="http://tempuri.org/IGTPService/getVersionResponse")>  _
        Function getVersion(ByVal version As String, ByVal isCurrent As Boolean) As GTPService._GTPVersion
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetUserAccount", ReplyAction:="http://tempuri.org/IGTPService/GetUserAccountResponse")>  _
        Function GetUserAccount(ByVal isFTPAccess As Integer) As GTPService._AspNetUser()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetFileStatus", ReplyAction:="http://tempuri.org/IGTPService/GetFileStatusResponse")>  _
        Function GetFileStatus(ByVal id_server_transaction As Integer, ByVal file_name As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/ExecuteQuery", ReplyAction:="http://tempuri.org/IGTPService/ExecuteQueryResponse")>  _
        Function ExecuteQuery(ByVal query As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetTransaction", ReplyAction:="http://tempuri.org/IGTPService/GetTransactionResponse")>  _
        Function GetTransaction(ByVal id_server_transaction As Integer) As GTPService._FTPTransaction
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/isFileExist", ReplyAction:="http://tempuri.org/IGTPService/isFileExistResponse")>  _
        Function isFileExist(ByVal FileName As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetProject", ReplyAction:="http://tempuri.org/IGTPService/GetProjectResponse")>  _
        Function GetProject() As GTPService._Project()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IGTPService/GetClient", ReplyAction:="http://tempuri.org/IGTPService/GetClientResponse")>  _
        Function GetClient() As GTPService._Client()
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IGTPServiceChannel
        Inherits GTPService.IGTPService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GTPServiceClient
        Inherits System.ServiceModel.ClientBase(Of GTPService.IGTPService)
        Implements GTPService.IGTPService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function ShadowPassword(ByVal action As Integer, ByVal shadowPassword1 As GTPService._ShadowPassword) As String Implements GTPService.IGTPService.ShadowPassword
            Return MyBase.Channel.ShadowPassword(action, shadowPassword1)
        End Function
        
        Public Function getShadowPassword(ByVal status As System.Nullable(Of Integer)) As GTPService._ShadowPassword() Implements GTPService.IGTPService.getShadowPassword
            Return MyBase.Channel.getShadowPassword(status)
        End Function
        
        Public Function ValidateUser(ByVal username As String, ByVal password As String) As Boolean Implements GTPService.IGTPService.ValidateUser
            Return MyBase.Channel.ValidateUser(username, password)
        End Function
        
        Public Function tblFTPFile(ByVal id_server_transaction As Integer, ByVal id_client_transaction As Integer, ByVal file_name As String, ByVal date_created As Date, ByVal is_finished As Boolean, ByVal file_status As Integer, ByVal file_name_only As String, ByVal bytestrnsfrd As Integer) As Boolean Implements GTPService.IGTPService.tblFTPFile
            Return MyBase.Channel.tblFTPFile(id_server_transaction, id_client_transaction, file_name, date_created, is_finished, file_status, file_name_only, bytestrnsfrd)
        End Function
        
        Public Function UpdatetbFTPFile(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal status As Integer) As Boolean Implements GTPService.IGTPService.UpdatetbFTPFile
            Return MyBase.Channel.UpdatetbFTPFile(id_server_transaction, FileName, status)
        End Function
        
        Public Function UpdateFileScannerStatus(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal isScanner As Integer) As Boolean Implements GTPService.IGTPService.UpdateFileScannerStatus
            Return MyBase.Channel.UpdateFileScannerStatus(id_server_transaction, FileName, isScanner)
        End Function
        
        Public Function UpdatetbFTPFileUploadTime(ByVal id_server_transaction As Integer, ByVal FileName As String, ByVal uploadtime As Integer) As Boolean Implements GTPService.IGTPService.UpdatetbFTPFileUploadTime
            Return MyBase.Channel.UpdatetbFTPFileUploadTime(id_server_transaction, FileName, uploadtime)
        End Function
        
        Public Function tblFTPTrasaction( _
                    ByVal Action As Integer,  _
                    ByVal id_server_transaction As Integer,  _
                    ByVal id_client_transaction As Integer,  _
                    ByVal transaction_type As Boolean,  _
                    ByVal date_started As Date,  _
                    ByVal username As String,  _
                    ByVal isCompleted As Boolean,  _
                    ByVal number_of_run As Short,  _
                    ByVal number_of_app_fail As Short,  _
                    ByVal id_market As Integer,  _
                    ByVal ftp_url As String,  _
                    ByVal ip_address As String,  _
                    ByVal host_name As String,  _
                    ByVal market_name As String,  _
                    ByVal transaction_status As Short,  _
                    ByVal DBName As String,  _
                    ByVal total_file_uploaded As Integer,  _
                    ByVal campaign As String,  _
                    ByVal Project As String,  _
                    ByVal totalinputbytes As Double) As Integer Implements GTPService.IGTPService.tblFTPTrasaction
            Return MyBase.Channel.tblFTPTrasaction(Action, id_server_transaction, id_client_transaction, transaction_type, date_started, username, isCompleted, number_of_run, number_of_app_fail, id_market, ftp_url, ip_address, host_name, market_name, transaction_status, DBName, total_file_uploaded, campaign, Project, totalinputbytes)
        End Function
        
        Public Function tblDBStatus(ByVal Action As Integer, ByVal status_notify As String, ByVal status_flag As Integer, ByVal MaintenanceStart As Date, ByVal MaintenanceEnd As Date, ByVal CreatedBy As String) As Boolean Implements GTPService.IGTPService.tblDBStatus
            Return MyBase.Channel.tblDBStatus(Action, status_notify, status_flag, MaintenanceStart, MaintenanceEnd, CreatedBy)
        End Function
        
        Public Function GetDBStatus(ByVal status_flag As Integer) As GTPService._DBStatus() Implements GTPService.IGTPService.GetDBStatus
            Return MyBase.Channel.GetDBStatus(status_flag)
        End Function
        
        Public Function CheckIsUserinRole(ByVal username As String, ByVal roleName As String) As Boolean Implements GTPService.IGTPService.CheckIsUserinRole
            Return MyBase.Channel.CheckIsUserinRole(username, roleName)
        End Function
        
        Public Function GetCampaign() As GTPService._Campaign() Implements GTPService.IGTPService.GetCampaign
            Return MyBase.Channel.GetCampaign
        End Function
        
        Public Function deletetblFTPFile(ByVal id_server_transaction As Integer) As Boolean Implements GTPService.IGTPService.deletetblFTPFile
            Return MyBase.Channel.deletetblFTPFile(id_server_transaction)
        End Function
        
        Public Function deleteFile(ByVal id_server_transaction As Integer, ByVal file_name As String) As Boolean Implements GTPService.IGTPService.deleteFile
            Return MyBase.Channel.deleteFile(id_server_transaction, file_name)
        End Function
        
        Public Function GetMarket(ByVal status As Integer) As GTPService._MarketName() Implements GTPService.IGTPService.GetMarket
            Return MyBase.Channel.GetMarket(status)
        End Function
        
        Public Function updateTotalFailed(ByVal id_server_transaction As Integer, ByVal fail_count As Integer, ByVal network_lost_count As Integer) As Integer Implements GTPService.IGTPService.updateTotalFailed
            Return MyBase.Channel.updateTotalFailed(id_server_transaction, fail_count, network_lost_count)
        End Function
        
        Public Function countFile(ByVal id_server_transaction As Integer, ByVal type As String) As Integer Implements GTPService.IGTPService.countFile
            Return MyBase.Channel.countFile(id_server_transaction, type)
        End Function
        
        Public Function updateTotalUploaded(ByVal id_server_transaction As Integer, ByVal total_file_uploaded As Integer) As Boolean Implements GTPService.IGTPService.updateTotalUploaded
            Return MyBase.Channel.updateTotalUploaded(id_server_transaction, total_file_uploaded)
        End Function
        
        Public Function deleteTransaction(ByVal id_server_transaction As Integer) As Boolean Implements GTPService.IGTPService.deleteTransaction
            Return MyBase.Channel.deleteTransaction(id_server_transaction)
        End Function
        
        Public Function AddMarket(ByVal name_market As String) As Boolean Implements GTPService.IGTPService.AddMarket
            Return MyBase.Channel.AddMarket(name_market)
        End Function
        
        Public Function completeTransaction(ByVal id_server_transaction As Integer) As Boolean Implements GTPService.IGTPService.completeTransaction
            Return MyBase.Channel.completeTransaction(id_server_transaction)
        End Function
        
        Public Function getVersion(ByVal version As String, ByVal isCurrent As Boolean) As GTPService._GTPVersion Implements GTPService.IGTPService.getVersion
            Return MyBase.Channel.getVersion(version, isCurrent)
        End Function
        
        Public Function GetUserAccount(ByVal isFTPAccess As Integer) As GTPService._AspNetUser() Implements GTPService.IGTPService.GetUserAccount
            Return MyBase.Channel.GetUserAccount(isFTPAccess)
        End Function
        
        Public Function GetFileStatus(ByVal id_server_transaction As Integer, ByVal file_name As String) As Integer Implements GTPService.IGTPService.GetFileStatus
            Return MyBase.Channel.GetFileStatus(id_server_transaction, file_name)
        End Function
        
        Public Function ExecuteQuery(ByVal query As String) As Boolean Implements GTPService.IGTPService.ExecuteQuery
            Return MyBase.Channel.ExecuteQuery(query)
        End Function
        
        Public Function GetTransaction(ByVal id_server_transaction As Integer) As GTPService._FTPTransaction Implements GTPService.IGTPService.GetTransaction
            Return MyBase.Channel.GetTransaction(id_server_transaction)
        End Function
        
        Public Function isFileExist(ByVal FileName As String) As Boolean Implements GTPService.IGTPService.isFileExist
            Return MyBase.Channel.isFileExist(FileName)
        End Function
        
        Public Function GetProject() As GTPService._Project() Implements GTPService.IGTPService.GetProject
            Return MyBase.Channel.GetProject
        End Function
        
        Public Function GetClient() As GTPService._Client() Implements GTPService.IGTPService.GetClient
            Return MyBase.Channel.GetClient
        End Function
    End Class
End Namespace
